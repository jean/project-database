Archetypes Basic Reference
==========================

:Author: Millie Ngoka
:Contact: miriam.ngoka@unep.org

Introduction
------------

The Project Database is a product for storing, catlaloguing and managing Projects.
It is an archetypes based product.

Other supporting products used include :

 - ATExtensions 0.7.1;
 - mxmContacts 2.3.0;
 - DataGridField;
 - intelligentText 1.0 beta 1;
 


Installation
------------

Requirements
************

The ProjectDatabase is currently being tested and run in various environments
using the following combination:

- Python 2.3.5

- Zope 2.8.1

- Plone 2.1


Directory Structure
-------
The ProjectDatabase consists of an overall folder called ProjectDatabase.
Within this are contained the main python files that define the structure of the product.

There are three sub folders as follows;

- doc - this contains the documentation; 
- Extensions - this contains the installer file;
- skins - this contains all the templates used to view, add, edit and search for projects; 


Main python files
-------

schemata.py
-----------
The heart of an archetype is its ``Schema``, which is a sequence of
fields. Archetypes includes the schema: *BaseSchema* which includes two
fields, ``id`` and ``title``, as well as the standard metadata fields.

The ``Schema`` works like a definition of what your object will
contain and how to present the information contained. When Zope starts
up, during product initialization, Archetypes reads the schema of the
registered classes and automagically generates methods to access and
mutate each of the fields defined on a Schema.

The schemata.py file contains different field definitions grouped together logically
according to the functions they perform.

e.g. the scope field and the region field are grouped together under one schema
definition called CountrySchema. This schema can then be reused across different
type definitions within the ProjectDatabase.


ProjectDatabase.py
------------------
The ProjectDatabase is a container for projects.
Projects cannot be created until a ProjectDatabase exists.
The schema definition consists of only a tile and an id. 
So this is defined directly in this file.


Project.py
----------
The Project is the main content type stored in the ProjectDatabase.
Its structure is defined here.
The project uses schemas defined in the schemata.py and
combines them as necessary


ProjectImplementation.py
------------------------
Each Project can store zero or more ProjectImplementation types.


FinancialManagementInformation.py
---------------------------------
Each Project can store one or more FinancialManagementInformation types.
It uses schemas defined in the schemata.py


MilestoneDates.py
-----------------
Each Project can store zero or more MilsetoneDates

Adding Fields
-------------
You can add fields to the schema definitions by either modifying the shemata.py
or one of the files mentioned above.

